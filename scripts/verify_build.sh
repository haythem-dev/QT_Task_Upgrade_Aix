#!/bin/sh
# Verify Qt 5.15.0 build on AIX 7.2
# Generated by Qt Build Planner

# Exit on error
set -e

QT_DIR="/opt/qt-5.15.0"  # Adjust to match your prefix

echo "=== Verifying Qt 5.15.0 installation ==="

# Check for key binaries
echo "Checking for Qt executables..."
for bin in qmake moc rcc uic lrelease lupdate; do
    if [ -x "$QT_DIR/bin/$bin" ]; then
        echo "✓ $bin found"
    else
        echo "✗ $bin missing"
    fi
done

# Check qmake version
echo -e "
Checking qmake version:"
$QT_DIR/bin/qmake --version

# Create a simple Qt test program
echo -e "
Creating test Qt application..."
mkdir -p qt-test
cd qt-test

cat > main.cpp << 'EOT'
#include <QApplication>
#include <QLabel>
#include <QDebug>

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);
    
    qDebug() << "Qt version:" << qVersion();
    qDebug() << "Build ABI:" << QSysInfo::buildAbi();
    qDebug() << "Current CPU architecture:" << QSysInfo::currentCpuArchitecture();
    
    QLabel label("Hello Qt on AIX!");
    label.resize(320, 240);
    label.show();
    
    return app.exec();
}
EOT

cat > qt-test.pro << 'EOT'
QT += core gui widgets
TARGET = qt-test
TEMPLATE = app
SOURCES += main.cpp
EOT

# Build the test app
echo "Building test application..."
$QT_DIR/bin/qmake
make

# Check if build was successful
if [ -x "qt-test" ]; then
    echo -e "
✓ Test application built successfully"
    echo "You can run ./qt-test to test the application"
else
    echo -e "
✗ Test application build failed"
fi

echo -e "
Verification completed!"
