--- qtbase-everywhere-src-5.15.0/src/corelib/global/qglobal.h.orig	2023-04-09 14:00:00.000000000 +0000
+++ qtbase-everywhere-src-5.15.0/src/corelib/global/qglobal.h	2023-04-09 14:00:00.000000000 +0000
@@ -85,6 +85,19 @@
 #  endif
 #endif
 
+// GCC 4.6.3 compatibility - define missing C++11 features
+#if defined(__GNUC__) && __GNUC__ == 4 && __GNUC_MINOR__ <= 6
+namespace std {
+    template<typename T> using decay_t = typename decay<T>::type;
+    template<bool B, typename T = void> using enable_if_t = typename enable_if<B, T>::type;
+    template<typename T> using remove_cv_t = typename remove_cv<T>::type;
+    template<typename T> using remove_reference_t = typename remove_reference<T>::type;
+    template<typename T> using add_const_t = typename add_const<T>::type;
+    template<typename T> using add_volatile_t = typename add_volatile<T>::type;
+    template<typename T> using add_cv_t = typename add_cv<T>::type;
+}
+#endif
+
 /*
    Some compilers support the restrict keyword, which tells the compiler
    that a given pointer (or array) parameter cannot overlap and can therefore be optimized.