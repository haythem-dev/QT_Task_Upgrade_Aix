--- a/src/corelib/global/qglobal.h
+++ b/src/corelib/global/qglobal.h
@@ -70,6 +70,20 @@
 #  define Q_PROCESSOR_ARM_64
 #endif
 
+// Add compatibility layer for GCC 4.6.3
+#if defined(__GNUC__) && __GNUC__ == 4 && __GNUC_MINOR__ <= 6
+namespace std {
+    // Template aliases not supported in GCC 4.6
+    template<typename T> struct add_const { typedef const T type; };
+    template<typename T> struct remove_const { typedef T type; };
+    template<typename T> struct remove_reference { typedef T type; };
+    template<typename T> struct remove_reference<T&> { typedef T type; };
+    template<typename T> struct decay { typedef typename remove_const<typename remove_reference<T>::type>::type type; };
+    
+    template<typename T> using decay_t = typename decay<T>::type;
+    template<bool B, typename T = void> using enable_if_t = typename enable_if<B, T>::type;
+}
+#endif
 
 #include <type_traits>
 #include <utility>
@@ -2090,6 +2104,14 @@
     using std::move;
 #endif
 
+// Compatibility macro for nullptr usage in GCC 4.6
+#if defined(__GNUC__) && __GNUC__ == 4 && __GNUC_MINOR__ <= 6
+# ifndef nullptr
+#  include <cstddef>
+#  define nullptr NULL
+# endif
+#endif
+
 QT_END_NAMESPACE
 
 #endif /* __cplusplus */